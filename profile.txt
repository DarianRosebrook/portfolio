# Git Commands
addcom() {
    git add .
    git commit -m "${1:-update}"
}

alias profile="vim ~/.bash_profile"
alias reloading="source ~/.bash_profile"



# git alias
alias gcheck="git checkout"
alias gpull="git pull origin"
alias gpo="git push origin"
alias gstat="git status"
alias gdiff="git diff"
alias grao="git remote add origin"
alias oops="git reset HEAD~1"

alias portfolio="cd ~/Desktop/Projects/portfolio/portfolio;"
alias jwatch="bundle exec jekyll serve --watch;"
alias sasswatch="cd ~/Desktop/Projects/portfolio/portfolio;sass --watch css/master.sass:css/master.css --style compressed"

export PS1="\u$ "# get current branch in git repo
function parse_git_branch() {
	BRANCH=`git branch 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/'`
	if [ ! "${BRANCH}" == "" ]
	then
		STAT=`parse_git_dirty`
		echo "[${BRANCH}${STAT}]"
	else
		echo ""
	fi
}

# get current status of git repo
function parse_git_dirty {
	status=`git status 2>&1 | tee`
	dirty=`echo -n "${status}" 2> /dev/null | grep "modified:" &> /dev/null; echo "$?"`
	untracked=`echo -n "${status}" 2> /dev/null | grep "Untracked files" &> /dev/null; echo "$?"`
	ahead=`echo -n "${status}" 2> /dev/null | grep "Your branch is ahead of" &> /dev/null; echo "$?"`
	newfile=`echo -n "${status}" 2> /dev/null | grep "new file:" &> /dev/null; echo "$?"`
	renamed=`echo -n "${status}" 2> /dev/null | grep "renamed:" &> /dev/null; echo "$?"`
	deleted=`echo -n "${status}" 2> /dev/null | grep "deleted:" &> /dev/null; echo "$?"`
	bits=''
	if [ "${renamed}" == "0" ]; then
		bits=">${bits}"
	fi
	if [ "${ahead}" == "0" ]; then
		bits="*${bits}"
	fi
	if [ "${newfile}" == "0" ]; then
		bits="+${bits}"
	fi
	if [ "${untracked}" == "0" ]; then
		bits="?${bits}"
	fi
	if [ "${deleted}" == "0" ]; then
		bits="x${bits}"
	fi
	if [ "${dirty}" == "0" ]; then
		bits="!${bits}"
	fi
	if [ ! "${bits}" == "" ]; then
		echo " ${bits}"
	else
		echo ""
	fi
}

export PS1="\n[\[\e[36m\]\h\[\e[m\]]:[\w]:\[\e[32m\]\`parse_git_branch\`\[\e[m\]\[\e[37m\]\n[\[\e[m\]\[\e[36m\]\u\[\e[m\]] \\$ "

if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion
